#!/usr/bin/env python

import argparse
import io

import numpy as np

from cogue.interface.vasp_io import VasprunxmlExpat

parser = argparse.ArgumentParser(description="Collect eigenvalues from vasprun.xml")
parser.add_argument("filenames", nargs="*")
args = parser.parse_args()

for filename in args.filenames:
    with io.open(filename, "rb") as f:
        vasprun = VasprunxmlExpat(f)
        if vasprun.parse():
            VBM = 0
            CBM = 0

            efermi = vasprun.get_efermi()
            vxml_eigvals = np.reshape(vasprun.get_eigenvalues()[-1], (-1, 2))
            eigvals = vxml_eigvals[:, 0]
            occupancies = vxml_eigvals[:, 1]
            indices = np.argsort(eigvals)
            prev_occ = 0
            prev_eig = 0
            band_gap = 0
            set_band_gap = False
            for i, (e, o) in enumerate(zip(eigvals[indices], occupancies[indices])):
                if i > 0:
                    if np.abs(prev_occ - o) > 0.5:
                        band_gap = e - prev_eig
                        set_band_gap = True

                print("%10.5f %7.5f" % (e, o))
                if set_band_gap:
                    VBM = prev_eig
                    CBM = e
                    set_band_gap = False

                prev_occ = o
                prev_eig = e

            print("# [VBM, CBM]: [%f, %f]" % (VBM, CBM))
            print("# Band gap: %f" % band_gap)

            if efermi:
                print("# Fermi level: %f" % efermi)
